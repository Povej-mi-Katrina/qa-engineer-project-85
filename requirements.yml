functional:
  - Пользователь имеет возможность зарегистрироваться
  - Пользователь имеет возможность выбрать сложность игры - elementary, easy, medium, hard
  - Пользователь имеет возможность выбрать тип соперника - случайный пользователь, друг, бот 
  - Пользователь имеет возможность выбрать тип задания - collections, hash-maps, math, strings, rest 
  - Пользователь имеет возможность выбрать язык программирования - clojure, cpp, csharp, dart, elixir, go, haskel, java, javascript, kotlin, php, python, ruby, rust, typecript
  - Пользователь имеет возможность присоединиться к запущенной игре в качестве зрителя
  - Пользователь имеет возможность оставлять сообщения в чатах
  - Пользователь имеет возможность просматривать запись игры
  - Сайт рассчитывает рейтинг пользователя в сумме результатов пройденных игр
  - Пользователь имеет возможность отправлять сообщения разработчикам с обратной связью о Багах и возможных улучшениях (improvement, feature) проекта
non-functional:
  - Сайт должен быть разработан с учетом удобства использования и оптимизирован для скорости работы
  - Сайт должен быть безопасным и защищать данные пользователя
  - Сайт должен быть удобным на мобильном устройстве
  - Сайт должен быть протестирован на совместимость с последними версиями браузеров - Google Chrome (earliest version - 100), Mozilla Firefox (earliest version - 100), Safari (earliest version - 15.5)
  - Сайт должен быть способен обрабатывать большое количество трафика
implicit:
  - Отображение статуса "Онлайн"/"Оффлайн" у пользователей
  - История активности пользователя должна сохранятся и отображаться в его профиле
  - При создании игры доступен поиск среди зарегистрированных игроков
  - Доступен фильтр типа заданий
  - Пользователь имеет возможность видеть статусы других игр ("Ожидает соперника", "В процессе")
