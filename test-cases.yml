- summary: |
    Регистрация пользователя через email
  requirement: |
    Пользователь имеет возможность зарегистрироваться 
  prerequisites: |
   Открыта страница регистрации
  test-data: |
    Тестовые данные
    Nickname = CatherineV email = katrina.208@mail.ru password = 12345Abc 
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Вводим Password Confirmation
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь зарегистрирован, редирект на главную страницу, пользователь авторизован

- summary: |
    Авторизация пользователя с существующим email и паролем
  requirement: |
    При верном вводе email и пароля пользователь должен войти в систему
  prerequisites:
    Открыта страница логина
  test-data: |
    Email = katrina.208@mail.ru password = 12345Abc
  steps:
    - Вводим Email
    - Вводим пароль
    - Нажимаем кнопку «Submit»
  expected-result: |
    Пользователь должен попасть на главную страницу

- summary: |
    Проверка входа пользователя с несуществующими email и паролем
  requirement: |
    При неправильном email или пароле пользователь должен получить сообщение об ошибке
  prerequisites:
    Открыта страница логина
  test-data: |
    Email = test@yahoo.com password = 1111
  steps:
    - Вводим Email
    - Вводим пароль
    - Нажимаем кнопку "Submit"
  expected-result: |
    Выводится сообщение об ошибке

- summary: |
    Восстановление пароля зарегистрированного пользователя
  requirement: |
    Зарегистрированный пользователь имеет возможность сбросить старый пароль
  prerequisites:
    Открыта страница логина
  test-data: |
    Email = katrina.208@mail.ru  
  steps:
    - Нажимаем кнопку "Forgot password?"
    - Вводим Email
    - Нажимаем кнопку "Submit"
  expected-result: |
    На почту отправлена ссылка для сброса пароля

- summary: |
    Восстановление пароля несуществующего пользователя
  requirement: |
    Зарегистрированный пользователь имеет возможность сбросить старый пароль
  prerequisites:
    Открыта страница логина
  test-data: |
    Email = test123@test.ru  
  steps:
    - Нажимаем кнопку "Forgot password?"
    - Вводим Email
    - Нажимаем кнопку "Submit"
  expected-result: |
    Выводится сообщение об ошибке (пользователя с таким email не существует)

- summary: |
    Авторизация пользователя через GitHub/Discord
  requirement: |
    Пользователь имеет возможность авторизоваться с существующим аккаунтом на GitHub или Discord
  prerequisites: |
   Пользователь авторизован на сайте GitHub/Discord, открыта страница регистрации CodeBattle https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    Тестовые данные github/discord
    email: test@test.ru password = 12345Abc
  steps:
    - Нажимаем кнопку «Sign up with GitHub/Discord»
  expected-result: |
    Редирект на главную страницу, пользователь авторизован

- summary: |
    Создание игры
  requirement: |
    Пользователь имеет создать игру
  prerequisites: |
   Пользователь авторизован, открыта главная страница
  test-data: |
    Email = katrina.208@mail.ru password = 12345Abc
  steps:
    - Нажимаем кнопку «Create a game»
    - Выбираем сложность, тип соперника, тип задания
    - Нажимаем кнопку «Create battle»
  expected-result: |
    Открывается окно игры с заданием, редактором кода, чатом

- summary: |
    Фильтрация типа заданий по тегу
  requirement: |
    Пользователь имеет возможность выбрать тип задания
  prerequisites: |
   Пользователь авторизован, открыто окно «Create a game»
  test-data: |
    Email = katrina.208@mail.ru password = 12345Abc
  steps:
    - Выбираем любой тег под «Choose task by name or tags»
  expected-result: |
    В выпадающем меню отображаются задания, подходящие под фильтр
    
- summary: |
    Выбор соперника из других пользователей
  requirement: |
    Пользователь имеет возможность выбрать тип соперника
  prerequisites: |
   Пользователь авторизован, открыто окно «Create a game»
  test-data: |
    Email = katrina.208@mail.ru password = 12345Abc
  steps:
    - В «Game Type» выбираем «With a friend»
  expected-result: |
    В выпадающем меню отображаются все зарегистрированные пользователи

- summary: |
    Отправка сообщений в чат
  requirement: |
    Пользователь имеет возможность оставлять сообщения в чатах
  prerequisites: |
   Пользователь авторизован, открыта главная страница
  test-data: |
    Email = katrina.208@mail.ru password = 12345Abc
  steps:
    - В поле с чатом вводим любое сообщение
    - Нажимаем «Send»
  expected-result: |
    В поле с чатом отображается отправленное пользователем сообщение

- summary: |
    Присоединение к идущей игре
  requirement: |
    Пользователь имеет возможность присоединиться к запущенной игре в качестве зрителя
  prerequisites: |
   Пользователь авторизован, открыта главная страница
  test-data: |
    Email = katrina.208@mail.ru password = 12345Abc
  steps:
    - В Lobby выбираем любую активную игру между другими пользователями
  expected-result: |
    Открывается окно игры с заданием, редакторами кода у соперников, чатом для пользователя-зрителя

- summary: |
    Просмотр рейтинга пользователя
  requirement: |
    Сайт рассчитывает рейтинг пользователя в сумме результатов пройденных игр
  prerequisites: |
   Пользователь авторизован, открыта главная страница
  test-data: |
    Email = katrina.208@mail.ru password = 12345Abc
  steps:
    - В LEADERBOARD выбираем любого игрока
    - Переходим в его профиль
  expected-result: |
    Отображается информация о количестве сыгранных матчей и место в рейтинге

- summary: |
    Проверка валидации Nickname при регистрации
  requirement: |
    Nickname должен содержать латиницу. Может также содержать цифры и нижнее подчеркивание. 
  prerequisites: |
   Открыта страница регистрации
  test-data: |
    Nickname = 111 Email = katrina.208@mail.ru password = 12345Abc
  steps:
    - Вводим Nickname
    - Вводим email
    - Вводим Password Confirmation
    - Нажимаем кнопку «Submit»
  expected-result: |
    Отображается сообщение о невалидности Nickname

- summary: |
    Проверка валидации email при регистрации
  requirement: |
    Email должен соответствовать стандарту: содержать латиницу, может содержать цифры в адресе, значок "@", название почтового сайта, домен в формате ".%"
  prerequisites: |
   Открыта страница регистрации
  test-data: |
    Nickname = Cat Email = 11.ru password = 12345Abc
  steps:
    - Вводим Nickname
    - Вводим email 
    - Вводим Password Confirmation
    - Нажимаем кнопку «Submit»
  expected-result: |
    Отображается сообщение о невалидности email

- summary: |
    Проверка валидации пароля при регистрации
  requirement: |
    Пароль должен содержать 6-16 символов
  prerequisites: |
   Открыта страница регистрации
  test-data: |
    Nickname = Cat Email = test@test.ru password = 123
  steps:
    - Вводим Nickname
    - Вводим email 
    - Вводим пароль
  expected-result: |
    Отображается сообщение о невалидности пароля

- summary: |
    Проверка валидации поля Password Confirmation
  requirement: |
    Значения полей Password и Password Confirmation должны совпадать
  prerequisites: |
   Открыта страница регистрации
  test-data: |
    Nickname = Cat Email = test@test.ru password = 12345Abc password confirmation = 111
  steps:
    - Вводим Nickname
    - Вводим email 
    - Вводим Password Confirmation
    - Нажимаем кнопку «Submit»
  expected-result: |
    Отображается сообщение о несовпадении значения полей Password и Password Confirmation

- summary: |
    Победа игрока в матче
  requirement: |
    Пользователь имеет возможность одержать победу в матче, правильно решив задачу быстрее соперника
  prerequisites: |
    Пользователь авторизован, открыта главная страница
  test-data: |
    - Сложность игры - easy
    - Тип соперника - бот
    - Тип задания - rect_area
    - Решение - file solution.txt
  steps:
    - Нажимаем Create a game
    - Выбираем указанные в тестовых данных условия игры
    - Нажимаем Create battle
    - В редакторе кода вводим решение
    - Нажимаем Run 
  expected-result: |
    Появляется всплывающее уведомление о победе, есть кнопка Rematch

- summary: |
    Победа соперника
  requirement: |
    Пользователь может проиграть, если не успеет решить задачу быстрее соперника
  prerequisites: |
    Пользователь1 авторизован, Пользователь2 авторизован, открыта главная страница
  test-data: |
    - Сложность игры - easy
    - Тип соперника - with a friend (Пользователь2)
    - Тип задания - rect_area
    - Решение - file solution.txt
    - Пользователь1 Login = katrina.208@mail.ru Password = 12345Abc
    - Пользователь2 Login = test123@test.ru Password = 12345Abc
  steps:
    - Пользователем1 нажимаем Create a game
    - Выбираем указанные в тестовых данных условия игры
    - Нажимаем Create battle
    - Пользователем2 в редакторе кода вводим решение
    - Нажимаем Run 
  expected-result: |
    У Пользователя1 появляется всплывающее уведомление о проигрыше, есть кнопка Rematch

- summary: |
    Пользователь сдался в игре
  requirement: |
    Пользователь может сдаться во время матча
  prerequisites: |
    Пользователь авторизован, открыта главная страница
  test-data: |
    - Сложность игры - easy
    - Тип соперника - bot
    - Тип задания - rect_area
    - Решение - file solution.txt
    - Login = katrina.208@mail.ru Password = 12345Abc
  steps:
    - Нажимаем Create a game
    - Выбираем тип соперника - бот
    - Выбираем любой уровень сложности, любой тип задания
    - Нажимаем Create battle
    - Выбираем кнопку Give up
    - В всплывающем окне «Are you sure you want to give up?» выбираем «Give up»
  expected-result: |
    У Пользователя появляется всплывающее уведомление о проигрыше, есть кнопка Rematch

- summary: |
    Вызов противника на матч-реванш после истечения времени матча
  requirement: |
    Пользователь имеет возможность вызвать противника на матч-реванш в случае, если время матча истекло до чьей-либо победы
  prerequisites: |
    Пользователь авторизован, открыта главная страница
  test-data: |
    Login = katrina.208@mail.ru Password = 12345Ab
  steps:
    - Нажимаем Create a game
    - Выбираем тип соперника - бот
    - Выбираем любой уровень сложности, любой тип задания
    - Нажимаем Create battle
    - Ждем завершения игры, ничего не вводим в поле для решения
    - После истечения времени нажимаем кнопку «Rematch» 
  expected-result: |
    После истечения времени матча появляется сообщение «Time is up. There are no winners in the game», кнопка «Rematch» отправляет сопернику предложение о повторной игре

- summary: |
    Смена языка программирования во время матча
  requirement: |
    Пользователь имеет возможность выбрать язык программирования - clojure, cpp, csharp, dart, elixir, go, haskel, java, javascript, kotlin, php, python, ruby, rust, typescript
  prerequisites: |
    Пользователь авторизован, открыта главная страница
  test-data: |
    Login = katrina.208@mail.ru Password = 12345Ab
  steps:
    - Нажимаем Create a game
    - Выбираем любые данные для игры
    - Нажимаем Create battle
    - У редактора кода в выпадающем меню выбираем любой язык программирования
  expected-result: |
    В поле редактора кода меняются данные и переменные в зависимости от выбранного языка

- summary: |
    Сброс написанного кода в ходе игры
  requirement: |
    Пользователь имеет возможность очистить поле редактора кода до исходных значений
  prerequisites: |
    Пользователь авторизован, открыта главная страница
  test-data: |
    Login = katrina.208@mail.ru Password = 12345Ab
  steps:
    - Нажимаем Create a game
    - Выбираем любые данные для игры
    - Нажимаем Create battle
    - В редакторе кода вводим любые данные
    - Нажимаем кнопку Reset editor 
  expected-result: |
    В поле редактора кода введенные данные удаляются, возвращаются исходные данные в зависимости от выбранного языка программирования

- summary: |
    Валидация ошибки в коде при решении задачи
  requirement: |
    Редактор кода выдает сообщение об ошибке в веденном пользователем коде
  prerequisites: |
    Пользователь авторизован, открыта главная страница
  test-data: |
    Login = katrina.208@mail.ru Password = 12345Ab
  steps:
    - Нажимаем Create a game
    - Выбираем любые данные для игры
    - Нажимаем Create battle
    - В редакторе кода вводим неверный код (например, файл wrong_solution.txt)
    - Нажимаем кнопку Run 
  expected-result: |
    В поле Output выводятся данные о проверке кода и сообщения об ошибках

- summary: |
    Смена языка программирования в настройках аккаунта
  requirement: |
    Пользователь имеет возможность выбрать язык программирования - clojure, cpp, csharp, dart, elixir, go, haskel, java, javascript, kotlin, php, python, ruby, rust, typescript
  prerequisites: |
    Пользователь авторизован, открыта страница Settings
  test-data: |
    Login = katrina.208@mail.ru Password = 12345Ab
  steps:
    - В выпадающем меню Your Weapon выбираем любой язык программирования
    - Нажимаем Save
    - Возвращаемся на главную страницу
    - Создаем игру через Create a game с любыми данными
    - Нажимаем Create battle
  expected-result: |
    В поле редактора кода отображается выбранный в Settings язык

- summary: |
    Принятие приглашения на матч от другого пользователя
  requirement: |
    Пользователь имеет возможность выбрать тип соперника - друг (любой зарегистрированный пользователь)
  prerequisites: |
    Пользователь1 и Пользователь2 авторизованы, открыта главная страница
  test-data: |
    - Сложность игры - easy
    - Тип соперника - with a friend (Пользователь2)
    - Тип задания - rect_area
    - Решение - file solution.txt
    - Пользователь1 Login = katrina.208@mail.ru Password = 12345Abc
    - Пользователь2 Login = test123@test.ru Password = 12345Abc
  steps:
    - Пользователем1 нажимаем Create a game
    - Выбираем указанные в тестовых данных условия игры
    - Нажимаем Create battle
    - Переходим в аккаунт Пользователя2
    - В навбаре Пользователем2 нажимаем на иконку с мечами
    - Нажимаем Accept
  expected-result: |
    Начинается игра между указанными пользователями с указанными условиями игры

- summary: |
    Отклонение приглашения на матч от другого пользователя
  requirement: |
    Пользователь имеет возможность отклонить приглашение на матч от другого пользователя
  prerequisites: |
    Пользователь1 и Пользователь2 авторизованы, открыта главная страница
  test-data: |
    - Сложность игры - easy
    - Тип соперника - with a friend (Пользователь2)
    - Тип задания - rect_area
    - Решение - file solution.txt
    - Пользователь1 Login = katrina.208@mail.ru Password = 12345Abc
    - Пользователь2 Login = test123@test.ru Password = 12345Abc
  steps:
    - Пользователем1 нажимаем Create a game
    - Выбираем указанные в тестовых данных условия игры
    - Нажимаем Create battle
    - Переходим в аккаунт Пользователя2
    - В навбаре Пользователем2 нажимаем на иконку с мечами
    - Нажимаем Decline
  expected-result: |
    У Пользователя2 уведомление исчезает, Пользователю1 приходит сообщение о том, что Пользователь2 отклонил приглашение
